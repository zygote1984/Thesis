\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2.1}{\ignorespaces A simplified version of the feature model for scheduling.}}{5}{figure.2.1}
\contentsline {figure}{\numberline {2.2}{\ignorespaces The static structure of \texttt {DemoPrinter}.}}{7}{figure.2.2}
\contentsline {figure}{\numberline {2.3}{\ignorespaces Mapping of system classes and generated interfaces}}{9}{figure.2.3}
\contentsline {figure}{\numberline {2.4}{\ignorespaces The final view of the system after all example case.}}{12}{figure.2.4}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3.1}{\ignorespaces Part of an online shop application}}{16}{figure.3.1}
\contentsline {figure}{\numberline {3.2}{\ignorespaces Grammar definition for instance pointcuts}}{21}{figure.3.2}
\contentsline {figure}{\numberline {3.3}{\ignorespaces Syntax for instance pointcut composition}}{27}{figure.3.3}
\contentsline {figure}{\numberline {3.4}{\ignorespaces An example to illustrate composition's effect on types}}{27}{figure.3.4}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {A simple type hierarchy}}}{27}{subfigure.4.1}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {Instance pointcut compositions and effect on the captured instance type}}}{27}{subfigure.4.2}
\contentsline {figure}{\numberline {3.5}{\ignorespaces Meta-model of a Specialization in ALIA4J.}}{32}{figure.3.5}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {4.1}{\ignorespaces UML diagram for the two components}}{48}{figure.4.1}
\contentsline {figure}{\numberline {4.2}{\ignorespaces The diagram of the object adapter and the corresponding Java implementation}}{49}{figure.4.2}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {Abstract view of the object adapter pattern}}}{49}{subfigure.2.1}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {Concrete view of the object adapter for the example case}}}{49}{subfigure.2.2}
\contentsline {subfigure}{\numberline {(c)}{\ignorespaces {The implementation for the \texttt {Cartesian2PolarAdapter}}}}{49}{subfigure.2.3}
\contentsline {figure}{\numberline {4.3}{\ignorespaces The diagram of the object adapter and the corresponding Java implementation}}{50}{figure.4.3}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {Abstract view of the object adapter pattern with inter-type declarations}}}{50}{subfigure.3.1}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {Concrete view of the aspect-oriented adapter pattern for the example case}}}{50}{subfigure.3.2}
\contentsline {subfigure}{\numberline {(c)}{\ignorespaces {The implementation for the \texttt {Cartesian2PolarAdapter} in AspectJ}}}{50}{subfigure.3.3}
\contentsline {figure}{\numberline {4.4}{\ignorespaces An overview of the \textit {\texttt {zamk}}\xspace framework}}{53}{figure.4.4}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {A new adaptation request}}}{56}{subfigure.5.1}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {Keeping source and target objects synchronized}}}{56}{subfigure.5.2}
\contentsline {figure}{\numberline {4.5}{\ignorespaces The compile-time workflow and dataflow of \textit {\texttt {zamk}}\xspace }}{58}{figure.4.5}
\contentsline {figure}{\numberline {4.6}{\ignorespaces The process triggered by a conversion request}}{69}{figure.4.6}
\contentsline {figure}{\numberline {4.7}{\ignorespaces The run-time \texttt {Conversion} objects type hierarchy}}{69}{figure.4.7}
\contentsline {figure}{\numberline {4.8}{\ignorespaces Two type hierarchies for representing animals and conversions between them}}{72}{figure.4.8}
